Onboarding | Errors
If you submit the code to the right, you'll see that you get two types of errors.

SQL errors are shown below the editor. These are errors returned by the SQL engine. You should see:

syntax error at or near "'DataCamp <3 SQL'" LINE 2: 'DataCamp <3 SQL' ^

DataCamp errors are shown in the Instructions box. These will let you know in plain English where you went wrong in your code! You should see:

You need to add SELECT at the start of line 2!
Instructions
100 XP
Submit the code to the right, check out the errors, then fix them!



-----------------------------------------------------------------------------------


Onboarding | Multi-step Exercises
The following multi-step exercise allows you to practice a new concept through repetition. Check it out!

Instructions 3/3
30 XP
Submit the query in the editor! Don't worry, you'll learn how it works soon.

Now change 'SQL' to 'SQL is' and click Submit!

Finally, change 'SQL is' to 'SQL is cool' and click Submit!



-----------------------------------------------------------------------------------

Beginning your SQL journey
Now that you're familiar with the interface, let's get straight into it.

SQL, which stands for Structured Query Language, is a language for interacting with data stored in something called a relational database.

You can think of a relational database as a collection of tables. A table is just a set of rows and columns, like a spreadsheet, which represents exactly one type of entity. For example, a table might represent employees in a company or purchases made, but not both.

Each row, or record, of a table contains information about a single entity. For example, in a table representing employees, each row represents a single person. Each column, or field, of a table contains a single attribute for all rows in the table. For example, in a table representing employees, we might have a column containing first and last names for all employees.

The table of employees might look something like this:

id	name	age	nationality
1	Jessica	22	Ireland
2	Gabriel	48	France
3	Laura	36	USA
How many fields does the employees table above contain?




-----------------------------------------------------------------------------------




SELECTing single columns
While SQL can be used to create and modify databases, the focus of this course will be querying databases. A query is a request for data from a database table (or combination of tables). Querying is an essential skill for a data scientist, since the data you need for your analyses will often live in databases.

In SQL, you can select data from a table using a SELECT statement. For example, the following query selects the name column from the people table:

SELECT name
FROM people;
In this query, SELECT and FROM are called keywords. In SQL, keywords are not case-sensitive, which means you can write the same query as:

select name
from people;
That said, it's good practice to make SQL keywords uppercase to distinguish them from other parts of your query, like column and table names.

It's also good practice (but not necessary for the exercises in this course) to include a semicolon at the end of your query. This tells SQL where the end of your query is!

Remember, you can see the results of executing your query in the query tab!

Instructions 3/3
30 XP
Select the title column from the films table.

Select the release_year column from the films table.

Select the name of each person in the people table.

-----------------------------------------------------------------------------------


SELECTing multiple columns
Well done! Now you know how to select single columns.

In the real world, you will often want to select multiple columns. Luckily, SQL makes this really easy. To select multiple columns from a table, simply separate the column names with commas!

For example, this query selects two columns, name and birthdate, from the people table:

SELECT name, birthdate
FROM people;
Sometimes, you may want to select all columns from a table. Typing out every column name would be a pain, so there's a handy shortcut:

SELECT *
FROM people;
If you only want to return a certain number of results, you can use the LIMIT keyword to limit the number of rows returned:

SELECT *
FROM people
LIMIT 10;
Before getting started with the instructions below, check out the column names in the films table!

Instructions 4/4
25 XP
Instructions 4/4
25 XP
Get the title of every film from the films table.

Get the title and release year for every film.

Get the title, release year and country for every film.

Get all columns from the films table.


-----------------------------------------------------------------------------------

